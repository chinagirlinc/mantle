<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

    <!-- STATUS: EXPERIMENTAL -->

    <service verb="create" noun="Request">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="statusId" default-value="ReqDraft"/>
            <parameter name="priority" default-value="5" type="Long"/>
            <parameter name="requestTypeEnumId" default-value="RfSupport"/>
            <parameter name="requestResolutionEnumId" default-value="RrUnresolved"/>
            <parameter name="filedByPartyId" default-value="${ec.user.userAccount.partyId}"/>
            <parameter name="assignToPartyId" default-value="${ec.user.userAccount.partyId}"/>
            <parameter name="clientPartyId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="requestId"/>
        </out-parameters>
        <actions>
            <service-call name="create#mantle.request.Request" out-map="context" in-map="context"/>
            <service-call name="create#mantle.request.RequestParty" in-map="[requestId:requestId, partyId:assignToPartyId,
                    roleTypeId:'Worker', fromDate:ec.user.nowTimestamp]"/>

            <if condition="clientPartyId">
                <service-call name="create#mantle.request.RequestParty" in-map="[requestId:requestId,
                        partyId:clientPartyId, roleTypeId:'CustomerBillTo', fromDate:ec.user.nowTimestamp]"/>
            </if>
        </actions>
    </service>
    <service verb="update" noun="Request">
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="requestId" required="true"/>
            <parameter name="clientPartyId"/>
        </in-parameters>
        <actions>
            <service-call name="update#mantle.request.Request" out-map="context" in-map="context"/>

            <if condition="clientPartyId">
                <service-call name="mantle.request.RequestServices.replace#RequestParty"
                        in-map="[requestId:requestId, roleTypeId:'CustomerBillTo', newPartyId:clientPartyId]"/>
            </if>
        </actions>
    </service>

    <service verb="replace" noun="RequestParty">
        <in-parameters>
            <parameter name="requestId" required="true"/>
            <parameter name="roleTypeId" required="true"/>
            <parameter name="newPartyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.request.RequestParty" list="rpList">
                <date-filter/><econdition field-name="requestId"/><econdition field-name="roleTypeId"/>
            </entity-find>
            <iterate list="rpList" entry="rpValue">
                <set field="rpValue.thruDate" from="ec.user.nowTimestamp"/>
                <entity-update value-field="rpValue"/>
            </iterate>
            <service-call name="create#mantle.request.RequestParty" in-map="[requestId:requestId,
                    partyId:newPartyId, roleTypeId:roleTypeId, fromDate:ec.user.nowTimestamp]"/>
        </actions>
    </service>
</services>
