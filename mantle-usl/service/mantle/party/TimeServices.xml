<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

    <service verb="create" noun="TimePeriod">
        <description>Must specify either fromDate or previousPeriodId.
            If thruDate is empty (common case) will be calculated.
            Checks for an existing TimePeriod for the partyId, timePeriodTypeId, and fromDate.
            The periodName field can be empty and one will be generated.
            The periodNum field can be empty and one will be generated.
            If no parentPeriodId is specified and previousPeriodId is then it will be copied from that (when advancing to a new parent period must create first and specify parentPeriodId).
        </description>
        <in-parameters>
            <auto-parameters entity-name="mantle.party.time.TimePeriod" include="nonpk"/>
            <parameter name="partyId" required="true"/>
            <parameter name="timePeriodTypeId" required="true"/>
            <parameter name="isClosed" default-value="N"/>
        </in-parameters>
        <out-parameters>
            <parameter name="timePeriodId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.time.TimePeriodType" value-field="timePeriodType"/>

            <if condition="!fromDate &amp;&amp; !previousPeriodId">
                <return error="true" message="Must specify either fromDate or previousPeriodId"/></if>

            <entity-find-one entity-name="mantle.party.time.TimePeriod" value-field="previousPeriod">
                <field-map field-name="timePeriodId" from="previousPeriodId"/></entity-find-one>
            <if condition="previousPeriod">
                <if condition="!fromDate"><set field="fromDate" from="previousPeriod.thruDate"/></if>
                <if condition="!parentPeriodId"><set field="parentPeriodId" from="previousPeriod.parentPeriodId"/></if>
            </if>

            <!-- see if there is already a TimePeriod for the partyId, timePeriodTypeId, and fromDate -->
            <entity-find entity-name="mantle.party.time.TimePeriod" list="existingPeriodList">
                <econdition field-name="partyId"/><econdition field-name="timePeriodTypeId"/>
                <econdition field-name="fromDate"/>
            </entity-find>
            <if condition="existingPeriodList">
                <return error="true" message="Existing ${timePeriodType.description} Time Period found for Party [${partyId}] starting on ${fromDate}"/>
            </if>

            <!-- if no thruDate calc from fromDate and timePeriodType -->
            <if condition="!thruDate">
                <script><![CDATA[
                    int field = StupidUtilities.getCalendarFieldFromUomId(timePeriodType.lengthUomId)
                    Calendar thruDateCal = ec.user.getCalendarSafe()
                    thruDateCal.setTime(fromDate)
                    BigDecimal periodLength = timePeriodType.periodLength
                    if (periodLength < 1 && timePeriodType.lengthUomId == 'TF_mon') {
                        // special case for Semi-Month
                        int maxDays = thruDateCal.getActualMaximum(Calendar.DAY_OF_MONTH)
                        int days = (maxDays * periodLength).setScale(0, BigDecimal.ROUND_DOWN).intValue()
                        if (thruDateCal.get(Calendar.DAY_OF_MONTH) < days) {
                            thruDateCal.add(Calendar.DAY_OF_MONTH, days)
                        } else {
                            thruDateCal.add(Calendar.DAY_OF_MONTH, maxDays - days)
                        }
                    } else {
                        thruDateCal.add(field, periodLength as int)
                    }
                    // step back by one day so thruDate is the last day of this period, not the first day of the next
                    thruDateCal.add(Calendar.DAY_OF_MONTH, -1)
                    thruDate = new java.sql.Date(thruDateCal.getTimeInMillis())
                ]]></script>
            </if>

            <!-- Set a default period name -->
            <if condition="!periodName">
                <entity-find-one entity-name="mantle.party.PartyDetail" value-field="partyDetail"/>
                <set field="periodName" value="${partyDetail.organizationName} ${timePeriodType.description} ${fromDate}"/>
            </if>
            <!-- Set a default period name -->
            <if condition="!periodNum">
                <if condition="previousPeriod?.periodNum &amp;&amp; parentPeriodId &amp;&amp; previousPeriod?.parentPeriodId">
                    <then>
                        <if condition="parentPeriodId == previousPeriod.parentPeriodId">
                            <then><set field="periodNum" from="previousPeriod.periodNum + 1"/></then>
                            <else><set field="periodNum" from="1"/></else>
                        </if>
                    </then>
                    <else>
                        <!-- calculate based on calendar year -->
                        <script>fromDateCal = ec.user.getCalendarSafe(); fromDateCal.setTime(fromDate)</script>
                        <if condition="timePeriodType.lengthUomId == 'TF_yr'">
                            <then>
                                <set field="periodNum" from="fromDateCal.get(Calendar.YEAR)"/>
                            </then>
                            <else-if condition="timePeriodType.lengthUomId == 'TF_mon'">
                                <set field="periodNum" from="(fromDateCal.get(Calendar.MONTH) / timePeriodType.periodLength).intValue() + 1"/>
                                <if condition="timePeriodType.periodLength &lt; 1 &amp;&amp; fromDateCal.get(Calendar.DAY_OF_MONTH) &gt; 1">
                                    <set field="periodNum" from="periodNum + 1"/></if>
                            </else-if>
                            <else-if condition="timePeriodType.lengthUomId == 'TF_wk'">
                                <set field="periodNum" from="(fromDateCal.get(Calendar.WEEK_OF_YEAR) / timePeriodType.periodLength).intValue() + 1"/>
                            </else-if>
                        </if>
                    </else>
                </if>
            </if>

            <service-call name="create#mantle.party.time.TimePeriod" in-map="context" out-map="context"/>
        </actions>
    </service>
</services>
