<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <service verb="reply" noun="CommunicationEvent">
        <in-parameters>
            <parameter name="parentCommEventId" required="true"/>
            <parameter name="subject"/>
            <parameter name="body"/>
            <parameter name="contentType" default-value="text/plain"/>
            <parameter name="fromPartyId" default="ec.user.userAccount.partyId"/>
            <parameter name="statusId" default-value="CeReceived"/>
        </in-parameters>
        <out-parameters><parameter name="communicationEventId"/></out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.party.communication.CommunicationEvent" value-field="parentCe">
                <field-map field-name="communicationEventId" from="parentCommEventId"/>
            </entity-find-one>
            <set field="rootCommEventId" from="parentCe?.rootCommEventId ?: parentCommEventId"/>
            <service-call name="create#mantle.party.communication.CommunicationEvent" out-map="context"
                    in-map="[communicationEventTypeId:'Comment', contactMechTypeEnumId:'CmtWebForm', statusId:statusId,
                        parentCommEventId:parentCommEventId, rootCommEventId:rootCommEventId,
                        fromPartyId:fromPartyId, toPartyId:parentCe.fromPartyId,
                        entryDate:ec.user.nowTimestamp, contentType:contentType, subject:subject, body:body]"/>
        </actions>
    </service>

    <service verb="create" noun="Message">
        <in-parameters>
            <auto-parameters entity-name="mantle.party.communication.CommunicationEvent" include="nonpk"/>
            <parameter name="fromPartyId" default="ec.user.userAccount.partyId"/>
            <parameter name="communicationEventTypeId" default-value="Message"/>
            <parameter name="statusId" default-value="CeReceived"/>
            <parameter name="entryDate" default="ec.user.nowTimestamp"/>

            <parameter name="purposeEnumId"/>
        </in-parameters>
        <out-parameters><parameter name="communicationEventId"/></out-parameters>
        <actions>
            <service-call name="create#mantle.party.communication.CommunicationEvent" in-map="context" out-map="context"/>
            <if condition="purposeEnumId">
                <service-call name="create#mantle.party.communication.CommunicationEventPurpose" in-map="context"/>
            </if>
        </actions>
    </service>
</services>
