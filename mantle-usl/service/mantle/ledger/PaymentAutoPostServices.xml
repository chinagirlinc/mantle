<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <service verb="post" noun="Payment">
        <in-parameters><parameter name="paymentId" required="true"/></in-parameters>
        <out-parameters><parameter name="acctgTransId"/></out-parameters>
        <actions>
            <!-- make sure there is no AcctgTrans for this paymentId -->
            <entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="existingTransList">
                <econdition field-name="paymentId"/>
            </entity-find>
            <if condition="existingTransList">
                <return error="true" message="Payment [${paymentId}] has already been posted in accounting transaction [${existingTransList[0].acctgTransId}]"/>
            </if>

            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <if condition="!payment"><return error="true" message="Could not find Payment with ID [${paymentId}]"/></if>

            <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentPartyAcctgPreferences"
                    in-map="[payment:payment]" out-map="context"/>

            <!-- if no preferences for from or to, we shouldn't post anything -->
            <if condition="!fromPartyAcctgPreference &amp;&amp; !toPartyAcctgPreference">
                <log level="info" message="Not posting payment [${paymentId}], could not find PartyAcctgPreference for From Party [${payment.fromPartyId}], To Party [${payment.toPartyId}], or Override Party [${payment.overrideOrgPartyId}]"/>
                <return/>
            </if>

            <!-- ==== create the main tx record(s) ==== -->

            <if condition="fromPartyAcctgPreference">
                <set field="acctgTransTypeEnumId" value="AttOutgoingPayment"/>
                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTrans" value-field="fromAcctgTrans"
                        map="[acctgTransTypeEnumId:acctgTransTypeEnumId, organizationPartyId:payment.fromPartyId,
                            transactionDate:ec.user.nowTimestamp, isPosted:'N', glFiscalTypeEnumId:'GLFT_ACTUAL',
                            otherPartyId:payment.toPartyId, amountUomId:payment.amountUomId, paymentId:payment.paymentId]"/>
                <entity-sequenced-id-primary value-field="fromAcctgTrans"/>
                <entity-create value-field="fromAcctgTrans"/>
            </if>
            <if condition="toPartyAcctgPreference">
                <set field="acctgTransTypeEnumId" value="AttIncomingPayment"/>
                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTrans" value-field="toAcctgTrans"
                        map="[acctgTransTypeEnumId:acctgTransTypeEnumId, organizationPartyId:payment.toPartyId,
                            transactionDate:ec.user.nowTimestamp, isPosted:'N', glFiscalTypeEnumId:'GLFT_ACTUAL',
                            otherPartyId:payment.fromPartyId, amountUomId:payment.amountUomId, paymentId:payment.paymentId]"/>
                <entity-sequenced-id-primary value-field="toAcctgTrans"/>
                <entity-create value-field="toAcctgTrans"/>
            </if>

            <!--
                For outgoing payments (internal org is fromPartyId)
                D side based on Payment type
                C side based on PaymentMethod

                For incoming payments (internal org is toPartyId)
                C side based on Payment type
                D side based on PaymentMethod
            -->

            <!-- keep track of if we should put in the error journal or post -->
            <set field="useErrorJournal" from="false"/>

            <!-- get applied and unapplied totals, are posted differently -->
            <set field="appliedTotal" from="0"/>
            <entity-find entity-name="mantle.account.payment.PaymentApplication" list="paymentApplicationList">
                <econdition field-name="paymentId"/>
            </entity-find>
            <iterate list="paymentApplicationList" entry="paymentApplication">
                <set field="appliedTotal" from="appliedTotal + paymentApplication.amountApplied"/>
            </iterate>
            <set field="unappliedTotal" from="payment.amount - appliedTotal"/>

            <!-- create entries for applied and unapplied totals, as applicable, based on Payment type -->

            <!-- Payment Type entry for from Party (outgoing) -->
            <if condition="fromPartyAcctgPreference">
                <if condition="appliedTotal">
                    <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                            in-map="[payment:payment, partyAcctgPreference:fromPartyAcctgPreference,
                                acctgTrans:fromAcctgTrans, amount:appliedTotal,
                                organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,
                                isApplied:'Y', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"
                            out-map="context"/>
                </if>
                <if condition="unappliedTotal">
                    <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                            in-map="[payment:payment, partyAcctgPreference:fromPartyAcctgPreference,
                                acctgTrans:fromAcctgTrans, amount:unappliedTotal,
                                organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,
                                isApplied:'N', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"
                            out-map="context"/>
                </if>
            </if>
            <!-- Payment Type entry for to Party (incoming) -->
            <if condition="toPartyAcctgPreference">
                <if condition="appliedTotal">
                    <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                            in-map="[payment:payment, partyAcctgPreference:toPartyAcctgPreference,
                                acctgTrans:toAcctgTrans, amount:appliedTotal,
                                organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,
                                isApplied:'Y', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"
                            out-map="context"/>
                </if>
                <if condition="unappliedTotal">
                    <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                            in-map="[payment:payment, partyAcctgPreference:toPartyAcctgPreference,
                                acctgTrans:toAcctgTrans, amount:unappliedTotal,
                                organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,
                                isApplied:'N', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"
                            out-map="context"/>
                </if>
            </if>

            <!-- create balancing entry for PaymentMethod -->
            <set field="paymentGlAccountId" from="payment.overrideGlAccountId"/>

            <if condition="payment.paymentMethodTypeEnumId == 'PmtCreditCard'">
                <entity-find-related-one value-field="payment" relationship-name="mantle.account.method.CreditCard"
                        to-value-field="creditCard"/>
            </if>
            <if condition="payment.paymentMethodTypeEnumId == 'PmtFinancialAccount'">
                <entity-find-related-one value-field="payment" relationship-name="mantle.account.method.FinancialAccount"
                        to-value-field="financialAccount"/>
            </if>
            <!-- Payment Method entry for from Party (outgoing) -->
            <if condition="fromPartyAcctgPreference">
                <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentMethodGlAccount"
                        in-map="[paymentMethodTypeEnumId:payment.paymentMethodTypeEnumId,
                            organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,
                            finAccountTypeId:financialAccount?.finAccountTypeId,
                            creditCardTypeEnumId:creditCard?.creditCardTypeEnumId]"
                        out-map="methodGlAccountOut"/>
                <set field="methodGlAccountId" from="methodGlAccountOut?.glAccountId"/>
                <set field="methodGlAccountTypeEnumId" from="methodGlAccountOut?.glAccountTypeEnumId"/>
                <if condition="!methodGlAccountId"><set field="useErrorJournal" from="true"/></if>

                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTransEntry" value-field="acctgTransEntry"
                        map="[acctgTransId:fromAcctgTrans.acctgTransId, debitCreditFlag:'C',
                            glAccountTypeEnumId:methodGlAccountTypeEnumId, glAccountId:methodGlAccountId,
                            amount:payment.amount, reconcileStatusId:'AES_NOT_RECONCILED', isSummary:'N']"/>
                <entity-sequenced-id-secondary value-field="acctgTransEntry"/>
                <entity-create value-field="acctgTransEntry"/>
            </if>
            <!-- Payment Method entry for to Party (incoming) -->
            <if condition="toPartyAcctgPreference">
                <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentMethodGlAccount"
                        in-map="[paymentMethodTypeEnumId:payment.paymentMethodTypeEnumId,
                            organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,
                            finAccountTypeId:financialAccount?.finAccountTypeId,
                            creditCardTypeEnumId:creditCard?.creditCardTypeEnumId]"
                        out-map="methodGlAccountOut"/>
                <set field="methodGlAccountId" from="methodGlAccountOut?.glAccountId"/>
                <set field="methodGlAccountTypeEnumId" from="methodGlAccountOut?.glAccountTypeEnumId"/>
                <if condition="!methodGlAccountId"><set field="useErrorJournal" from="true"/></if>

                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTransEntry" value-field="acctgTransEntry"
                        map="[acctgTransId:toAcctgTrans.acctgTransId, debitCreditFlag:'D',
                            glAccountTypeEnumId:methodGlAccountTypeEnumId, glAccountId:methodGlAccountId,
                            amount:payment.amount, reconcileStatusId:'AES_NOT_RECONCILED', isSummary:'N']"/>
                <entity-sequenced-id-secondary value-field="acctgTransEntry"/>
                <entity-create value-field="acctgTransEntry"/>
            </if>

            <!-- ==== post the tx ==== -->

            <if condition="useErrorJournal">
                <!-- put in the error journal for the org -->
                <if condition="fromPartyAcctgPreference?.errorGlJournalId">
                    <service-call name="update#mantle.ledger.transaction.AcctgTrans"
                            in-map="[acctgTransId:fromAcctgTrans.acctgTransId, glJournalId:fromPartyAcctgPreference.errorGlJournalId]"/>
                </if>
                <if condition="toPartyAcctgPreference?.errorGlJournalId">
                    <service-call name="update#mantle.ledger.transaction.AcctgTrans"
                            in-map="[acctgTransId:toAcctgTrans.acctgTransId, glJournalId:toPartyAcctgPreference.errorGlJournalId]"/>
                </if>

                <else>
                    <!-- call the post service -->
                    <if condition="fromPartyAcctgPreference">
                        <service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId]"/>
                    </if>
                    <if condition="toPartyAcctgPreference">
                        <service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId]"/>
                    </if>
                </else>
            </if>
        </actions>
    </service>
    <service verb="get" noun="PaymentPartyAcctgPreferences">
        <in-parameters><parameter name="payment" type="EntityValue"/></in-parameters>
        <out-parameters>
            <parameter name="fromPartyAcctgPreference" type="EntityValue"/>
            <parameter name="toPartyAcctgPreference" type="EntityValue"/>
        </out-parameters>
        <actions>
            <!-- is there a OrgInternal PartyRole for from/to parties, and PartyAcctgPreference for the from/to parties or parent orgs of them? -->
            <entity-find-one entity-name="mantle.party.PartyRole" value-field="fromPartyRole">
                <field-map field-name="partyId" from="payment.overrideOrgPartyId ?: payment.fromPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="fromPartyRole">
                <service-call name="mantle.ledger.LedgerServices.find#PartyAcctgPreference" out-map="fromPapOut"
                        in-map="[organizationPartyId:fromPartyRole.partyId]"/>
                <set field="fromPartyAcctgPreference" from="fromPapOut.partyAcctgPreference"/>
            </if>

            <entity-find-one entity-name="mantle.party.PartyRole" value-field="toPartyRole">
                <field-map field-name="partyId" from="payment.overrideOrgPartyId ?: payment.toPartyId"/>
                <field-map field-name="roleTypeId" value="OrgInternal"/>
            </entity-find-one>
            <if condition="toPartyRole">
                <service-call name="mantle.ledger.LedgerServices.find#PartyAcctgPreference" out-map="toPapOut"
                        in-map="[organizationPartyId:toPartyRole.partyId]"/>
                <set field="toPartyAcctgPreference" from="toPapOut.partyAcctgPreference"/>
            </if>

        </actions>
    </service>
    <service verb="create" noun="PaymentTypeEntry">
        <in-parameters>
            <parameter name="payment" type="EntityValue" required="true"/>
            <parameter name="partyAcctgPreference" type="EntityValue" required="true"/>
            <parameter name="acctgTrans" type="EntityValue" required="true"/>
            <parameter name="amount" type="BigDecimal" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="otherPartyId" required="true"/>
            <parameter name="isApplied" required="true"/>
            <parameter name="debitCreditFlag" required="true"/>
            <parameter name="useErrorJournal" type="Boolean" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="useErrorJournal" type="Boolean"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentTypeGlAccount"
                    in-map="[paymentId:payment.paymentId, organizationPartyId:organizationPartyId,
                        otherPartyId:otherPartyId, isApplied:isApplied]"
                    out-map="paymentGlAccountOut"/>
            <set field="paymentGlAccountId" from="paymentGlAccountOut?.glAccountId"/>
            <set field="paymentGlAccountTypeEnumId" from="paymentGlAccountOut?.glAccountTypeEnumId"/>
            <if condition="!paymentGlAccountId"><set field="useErrorJournal" from="true"/></if>

            <entity-make-value entity-name="mantle.ledger.transaction.AcctgTransEntry" value-field="acctgTransEntry"
                    map="[acctgTransId:acctgTrans.acctgTransId, debitCreditFlag:debitCreditFlag,
                        glAccountTypeEnumId:paymentGlAccountTypeEnumId, glAccountId:paymentGlAccountId, amount:amount,
                        reconcileStatusId:'AES_NOT_RECONCILED', isSummary:'N']"/>
            <entity-sequenced-id-secondary value-field="acctgTransEntry"/>
            <entity-create value-field="acctgTransEntry"/>
        </actions>
    </service>

    <service verb="get" noun="PaymentTypeGlAccount">
        <in-parameters>
            <parameter name="paymentId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="otherPartyId"/>
            <parameter name="isApplied" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="glAccountId"/>
            <parameter name="glAccountTypeEnumId"/>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="mantle.ledger.LedgerServices.expand#ParentOrganizationList" out-map="context"
                    in-map="[organizationPartyId:organizationPartyId]"/>

            <set field="isPayable" from="organizationPartyId == payment.fromPartyId ? 'Y' : 'N'"/>
            <entity-find entity-name="mantle.ledger.config.PaymentTypeGlAccount" list="paymentTypeGlAccountList" cache="true">
                <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                <econdition field-name="paymentTypeEnumId" from="payment.paymentTypeEnumId"/>
                <econdition field-name="isApplied"/>
                <econdition field-name="isPayable"/>
            </entity-find>
            <set field="glAccountId" from="paymentTypeGlAccountList.first?.glAccountId"/>
        </actions>
    </service>
    <service verb="get" noun="PaymentMethodGlAccount">
        <in-parameters>
            <parameter name="paymentMethodTypeEnumId" required="true"/>
            <parameter name="organizationPartyId" required="true"/>
            <parameter name="otherPartyId"/>
            <parameter name="finAccountTypeId"/>
            <parameter name="creditCardTypeEnumId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="glAccountId"/>
            <parameter name="glAccountTypeEnumId"/>
        </out-parameters>
        <actions>
            <service-call name="mantle.ledger.LedgerServices.expand#ParentOrganizationList" out-map="context"
                    in-map="[organizationPartyId:organizationPartyId]"/>

            <if condition="paymentMethodTypeEnumId == 'PmtCreditCard'">
                <entity-find entity-name="mantle.ledger.config.CreditCardTypeGlAccount" list="creditCardTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="creditCardTypeEnumId"/>
                </entity-find>
                <set field="glAccountId" from="creditCardTypeGlAccountList.first?.glAccountId"/>
            </if>
            <if condition="paymentMethodTypeEnumId == 'FinancialAccountTypeGlAccount'">
                <entity-find entity-name="mantle.ledger.config.PaymentMethodTypeGlAccount" list="financialAccountTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="finAccountTypeId"/>
                </entity-find>
                <set field="glAccountId" from="financialAccountTypeGlAccountList.first?.glAccountId"/>
            </if>

            <if condition="!glAccountId">
                <entity-find entity-name="mantle.ledger.config.PaymentMethodTypeGlAccount" list="paymentMethodTypeGlAccountList" cache="true">
                    <econdition field-name="organizationPartyId" operator="in" from="orgPartyIdList"/>
                    <econdition field-name="paymentMethodTypeEnumId"/>
                </entity-find>
                <set field="glAccountId" from="paymentMethodTypeGlAccountList.first?.glAccountId"/>
            </if>
        </actions>
    </service>

    <service verb="post" noun="PaymentApplication">
        <description>If payment was posted as unapplied then post to consider it applied in the GL.</description>
        <in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters>
        <out-parameters><parameter name="acctgTransId"/></out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.PaymentApplication" value-field="paymentApplication"/>
            <set field="payment" from="paymentApplication.'mantle.account.payment.Payment'"/>

            <!-- only post if Payment already posted as unapplied -->
            <entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="existingTransList">
                <econdition field-name="paymentId" from="payment.paymentId"/>
                <econdition field-name="acctgTransTypeEnumId" operator="in" value="AttOutgoingPayment,AttIncomingPayment"/>
            </entity-find>
            <if condition="!existingTransList">
                <!-- if not yet posted the Payment posting will post as applied and take care of it -->
                <log level="info" message="Payment [${payment.paymentId}] has not yet been posted, not posting PaymentApplication"/>
                <return/>
            </if>

            <service-call name="mantle.ledger.PaymentAutoPostServices.get#PaymentPartyAcctgPreferences"
                    in-map="[payment:payment]" out-map="context"/>

            <!-- if no preferences for from or to, we shouldn't post anything -->
            <if condition="!fromPartyAcctgPreference &amp;&amp; !toPartyAcctgPreference">
                <log level="info" message="Not posting payment application [${paymentApplicationId}] for payment [${payment.paymentId}], could not find PartyAcctgPreference for From Party [${payment.fromPartyId}], To Party [${payment.toPartyId}], or Override Party [${payment.overrideOrgPartyId}]"/>
                <return/>
            </if>

            <!-- ==== create the main tx record(s) ==== -->

            <if condition="fromPartyAcctgPreference">
                <set field="acctgTransTypeEnumId" value="AttOutgoingPaymentAp"/>
                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTrans" value-field="fromAcctgTrans"
                        map="[acctgTransTypeEnumId:acctgTransTypeEnumId, organizationPartyId:payment.fromPartyId,
                            transactionDate:ec.user.nowTimestamp, isPosted:'N', glFiscalTypeEnumId:'GLFT_ACTUAL',
                            otherPartyId:payment.toPartyId, amountUomId:payment.amountUomId,
                            paymentId:payment.paymentId, paymentApplicationId:paymentApplicationId]"/>
                <entity-sequenced-id-primary value-field="fromAcctgTrans"/>
                <entity-create value-field="fromAcctgTrans"/>
            </if>
            <if condition="toPartyAcctgPreference">
                <set field="acctgTransTypeEnumId" value="AttIncomingPaymentAp"/>
                <entity-make-value entity-name="mantle.ledger.transaction.AcctgTrans" value-field="toAcctgTrans"
                        map="[acctgTransTypeEnumId:acctgTransTypeEnumId, organizationPartyId:payment.toPartyId,
                            transactionDate:ec.user.nowTimestamp, isPosted:'N', glFiscalTypeEnumId:'GLFT_ACTUAL',
                            otherPartyId:payment.fromPartyId, amountUomId:payment.amountUomId,
                            paymentId:payment.paymentId, paymentApplicationId:paymentApplicationId]"/>
                <entity-sequenced-id-primary value-field="toAcctgTrans"/>
                <entity-create value-field="toAcctgTrans"/>
            </if>

            <!-- keep track of if we should put in the error journal or post -->
            <set field="useErrorJournal" from="false"/>

            <!-- Payment Type entry for from Party (outgoing) -->
            <if condition="fromPartyAcctgPreference">
                <!-- debit applied account -->
                <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                        in-map="[payment:payment, partyAcctgPreference:fromPartyAcctgPreference,
                            acctgTrans:fromAcctgTrans, amount:paymentApplication.amountApplied,
                            organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,
                            isApplied:'Y', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"
                        out-map="context"/>
                <!-- credit unapplied account (was previously debited) -->
                <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                        in-map="[payment:payment, partyAcctgPreference:fromPartyAcctgPreference,
                            acctgTrans:fromAcctgTrans, amount:paymentApplication.amountApplied,
                            organizationPartyId:payment.fromPartyId, otherPartyId:payment.toPartyId,
                            isApplied:'N', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"
                        out-map="context"/>
            </if>
            <!-- Payment Type entry for to Party (incoming) -->
            <if condition="toPartyAcctgPreference">
                <!-- credit applied account -->
                <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                        in-map="[payment:payment, partyAcctgPreference:toPartyAcctgPreference,
                            acctgTrans:toAcctgTrans, amount:paymentApplication.amountApplied,
                            organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,
                            isApplied:'Y', debitCreditFlag:'C', useErrorJournal:useErrorJournal]"
                        out-map="context"/>
                <!-- debit unapplied account (was previously credited) -->
                <service-call name="mantle.ledger.PaymentAutoPostServices.create#PaymentTypeEntry"
                        in-map="[payment:payment, partyAcctgPreference:toPartyAcctgPreference,
                            acctgTrans:toAcctgTrans, amount:paymentApplication.amountApplied,
                            organizationPartyId:payment.toPartyId, otherPartyId:payment.fromPartyId,
                            isApplied:'N', debitCreditFlag:'D', useErrorJournal:useErrorJournal]"
                        out-map="context"/>
            </if>

            <!-- ==== post the tx ==== -->

            <if condition="useErrorJournal">
                <!-- put in the error journal for the org -->
                <if condition="fromPartyAcctgPreference?.errorGlJournalId">
                    <service-call name="update#mantle.ledger.transaction.AcctgTrans"
                            in-map="[acctgTransId:fromAcctgTrans.acctgTransId, glJournalId:fromPartyAcctgPreference.errorGlJournalId]"/>
                </if>
                <if condition="toPartyAcctgPreference?.errorGlJournalId">
                    <service-call name="update#mantle.ledger.transaction.AcctgTrans"
                            in-map="[acctgTransId:toAcctgTrans.acctgTransId, glJournalId:toPartyAcctgPreference.errorGlJournalId]"/>
                </if>

                <else>
                    <!-- call the post service -->
                    <if condition="fromPartyAcctgPreference">
                        <service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:fromAcctgTrans.acctgTransId]"/>
                    </if>
                    <if condition="toPartyAcctgPreference">
                        <service-call name="mantle.ledger.LedgerServices.post#AcctgTrans" in-map="[acctgTransId:toAcctgTrans.acctgTransId]"/>
                    </if>
                </else>
            </if>
        </actions>
    </service>

    <service verb="revert" noun="PaymentApplicationPostOnRemove">
        <in-parameters><parameter name="paymentApplicationId" required="true"/></in-parameters>
        <actions>
            <!-- there should just be one AcctgTrans for this, if there is more than one may already be reversed -->
            <entity-find entity-name="mantle.ledger.transaction.AcctgTrans" list="acctgTransList">
                <econdition field-name="paymentApplicationId"/>
                <econdition field-name="acctgTransTypeEnumId" operator="in" value="AttOutgoingPaymentAp,AttIncomingPaymentAp"/>
            </entity-find>
            <if condition="acctgTransList">
                <if condition="acctgTransList.size() == 1">
                    <service-call name="mantle.ledger.LedgerServices.post#ReverseAcctgTrans"
                            in-map="[acctgTransId:acctgTransList.first.acctgTransId]"/>

                    <else><return error="true" message="Found more than one accounting transaction for Payment Application ${paymentApplicationId}, may already be reversed, not posting reverse transaction."/></else>
                </if>
                <else><return error="true" message="No accounting transaction found for Payment Application ${paymentApplicationId}, not posting reverse transaction."/></else>
            </if>
        </actions>
    </service>
</services>
