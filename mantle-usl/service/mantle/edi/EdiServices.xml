<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

    <service verb="receive" noun="EdiMessage">
        <in-parameters>
            <parameter name="messageText" required="true"/>
            <parameter name="systemMessageTypeId" default-value="EdiMessage"/>
        </in-parameters>
        <actions>
            <set field="messageText" from="messageText.trim()"/>
            <if condition="messageText.startsWith('ISA')">
                <then>
                    <set field="ediHandler" from="new org.moqui.impl.util.EdiHandler(ec).loadEnvelope(x12EnvelopeLocation)"/>
                    <set field="splitList" from="ediHandler.splitMessage('ISA', 'IEA', messageText)"/>
                    <!-- create new SystemMessage for each ISA in a bulk message, if there is more than one (so they can be processed with individual status) -->
                    <iterate list="splitList" entry="splitMessage">
                        <set field="ediMap" from="ediHandler.parseText(splitMessage)"/>
                        <!-- with split message should always be a single ISA segment -->
                        <set field="ISA" from="ediMap.ISA[0]"/>
                        <set field="GS" from="ISA.GS[0]"/>
                        <set field="ST" from="GS.ST[0]"/>

                        <set field="systemMessage.senderId" from="ISA.elements[6]"/>
                        <set field="systemMessage.receiverId" from="ISA.elements[8]"/>
                        <set field="systemMessage.messageId" from="ISA.elements[13]"/>
                        <if condition="ISA.elements[9] &amp;&amp; ISA.elements[10]">
                            <set field="systemMessage.messageDate"
                                    from="ec.l10.parseTimestamp(ISA.elements[9] + ISA.elements[10], 'yyyyMMddHHmm')"/>
                        </if>
                        <set field="docType" from="GS.elements[1]"/><!-- GS01 -->
                        <set field="docSubType" from="ST.elements[1]"/><!-- ST01 -->
                        <set field="docVersion" from="GS.elements[8]"/><!-- GS08 -->

                        <service-call name="org.moqui.impl.SystemMessageServices.receive#SystemMessage"
                                in-map="[systemMessageTypeId:systemMessageTypeId, messageText:splitMessage,
                                    senderId:senderId, receiverId:receiverId, messageId:messageId, messageDate:messageDate,
                                    docType:docType, docSubType:docSubType, docVersion:docVersion]"/>
                    </iterate>
                </then>
                <!-- FUTURE: identify and handle EDIFACT, etc splitting and message field population -->
                <else>
                    <service-call name="org.moqui.impl.SystemMessageServices.receive#SystemMessage"
                            in-map="[systemMessageTypeId:systemMessageTypeId, messageText:messageText]"/>
                </else>
            </if>
        </actions>
    </service>

    <service verb="consume" noun="EdiMessage">
        <implements service="org.moqui.impl.SystemMessageServices.consume#SystemMessage"/>
        <in-parameters>
            <parameter name="x12EnvelopeLocation" default-value="component://mantle-usl/service/edi/X12Envelope.groovy"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="moqui.service.message.SystemMessage" value-field="systemMessage" for-update="true"/>
            <set field="messageText" from="systemMessage.messageText.trim()"/>

            <if condition="messageText.startsWith('ISA')">
                <then>
                    <!-- no need to do this here,
                    <set field="ediHandler" from="new org.moqui.impl.util.EdiHandler(ec).loadEnvelope(x12EnvelopeLocation)"/>
                    <set field="ediMap" from="ediHandler.parseText(messageText)"/>
                    <set field="ISA" from="ediMap.ISA[0]"/>
                    <set field="GS" from="ISA.GS[0]"/>
                    <set field="ST" from="GS.ST[0]"/>
                    <if condition="!systemMessage.messageId">
                        <set field="systemMessage.senderId" from="ISA.elements[6]"/>
                        <set field="systemMessage.receiverId" from="ISA.elements[8]"/>
                        <set field="systemMessage.messageId" from="ISA.elements[13]"/>
                        <if condition="ISA.elements[9] &amp;&amp; ISA.elements[10]">
                            <set field="systemMessage.messageDate"
                                    from="ec.l10.parseTimestamp(ISA.elements[9] + ISA.elements[10], 'yyyyMMddHHmm')"/>
                        </if>
                        <entity-update value-field="systemMessage"/>
                    </if>
                    <set field="docType" from="GS.elements[1]"/>
                    <set field="docSubType" from="ST.elements[1]"/>
                    -->

                    <if condition="systemMessage.docType == 'PO' &amp;&amp; systemMessage.docSubType == '850'">
                        <then>
                            <service-call name="mantle.edi.order.X12OrderServices.consume#PurchaseOrder" in-map="[messageText:messageText]"/>
                        </then>
                        <else>
                            <message error="true">X12 Functional ID Code at GS01 [${funcIdCode}] and Transaction Set ID Code as ST01 [${transSetIdCode}] not supported.</message>
                        </else>
                    </if>
                </then>
                <!-- FUTURE: identify and handle EDIFACT, etc -->
                <else>
                    <return error="true" message="Could not identify EDI type, message starts with [${messageText.substring(0,3)}]"/>
                </else>
            </if>
        </actions>
    </service>
</services>
