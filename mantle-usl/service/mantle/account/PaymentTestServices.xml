<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

<!-- STATUS: EXPERIMENTAL -->

    <service verb="alwaysApprove" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoAuthorize',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'Y', resultDeclined:'N', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>
    <service verb="alwaysDecline" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoAuthorize',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'N', resultDeclined:'Y', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>
    <service verb="alwaysFail" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <!-- TODO: implement this... -->
        </actions>
    </service>
    <service verb="alwaysBadCardNumber" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoAuthorize',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'N', resultDeclined:'N', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'Y']"/>
        </actions>
    </service>
    <service verb="alwaysBadExpire" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoAuthorize',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'N', resultDeclined:'N', resultNsf:'N', resultBadExpire:'Y', resultBadCardNumber:'N']"/>
        </actions>
    </service>
    <service verb="alwaysNsf" noun="PaymentAuthorization">
        <implements service="mantle.account.PaymentServices.authorize#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoAuthorize',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'N', resultDeclined:'N', resultNsf:'Y', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>

    <service verb="alwaysApprove" noun="PaymentCapture">
        <implements service="mantle.account.PaymentServices.capture#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoCapture',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:(amount ?: payment.amount),
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'Y', resultDeclined:'N', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>
    <service verb="alwaysDecline" noun="PaymentCapture">
        <implements service="mantle.account.PaymentServices.capture#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoCapture',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:(amount ?: payment.amount),
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'N', resultDeclined:'Y', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>

    <service verb="alwaysApprove" noun="PaymentRelease">
        <implements service="mantle.account.PaymentServices.release#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoRelease',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'Y', resultDeclined:'N', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>
    <service verb="alwaysApprove" noun="PaymentRefund">
        <implements service="mantle.account.PaymentServices.refund#Payment"/>
        <actions>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <service-call name="create#mantle.account.method.PaymentGatewayResponse" out-map="context"
                    in-map="[paymentGatewayConfigId:paymentGatewayConfigId, paymentOperationEnumId:'PgoRefund',
                        paymentId:payment.paymentId, paymentMethodId:payment.paymentMethodId, amount:payment.amount,
                        amountUomId:payment.amountUomId, referenceNum:'TEST', transactionDate:ec.user.nowTimestamp,
                        resultSuccess:'Y', resultDeclined:'N', resultNsf:'N', resultBadExpire:'N', resultBadCardNumber:'N']"/>
        </actions>
    </service>
</services>
